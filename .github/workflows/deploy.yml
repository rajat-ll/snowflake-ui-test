name: Deploy App via snowcli

on:
  workflow_dispatch:
    inputs:
      snowflake_account:
        description: 'Snowflake Account'
        required: true
      snowflake_user:
        description: 'Snowflake User'
        required: true
      snowflake_password:
        description: 'Snowflake Password'
        required: true
      snowflake_role:
        description: 'Snowflake Role'
        required: true

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          cache: "pip"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install snowcli
        run: pip install snowflake-cli-labs~=2.5.0

      - name: Install yq
        run: sudo snap install yq

      - name: Set environment variables
        run: |
          export DATABASE=$(yq -e eval '.streamlit.database' snowflake.yml)
          export SCHEMA=$(yq -e eval '.streamlit.schema' snowflake.yml)
          echo "DATABASE=$DATABASE" >> $GITHUB_ENV
          echo "SCHEMA=$SCHEMA" >> $GITHUB_ENV

      - name: Create snowcli config
        env:
          SNOWFLAKE_ACCOUNT: ${{ github.event.inputs.snowflake_account }}
          SNOWFLAKE_USER: ${{ github.event.inputs.snowflake_user }}
          SNOWFLAKE_PASSWORD: ${{ github.event.inputs.snowflake_password }}
          SNOWFLAKE_ROLE: ${{ github.event.inputs.snowflake_role }}
        run: |
          mkdir -p ~/.snowflake
          cat << EOF > ~/.snowflake/config.toml
          [connections.default]
          account = "$SNOWFLAKE_ACCOUNT"
          user = "$SNOWFLAKE_USER"
          password = "$SNOWFLAKE_PASSWORD"
          connection_timeout = 600
          database = "$DATABASE"
          schema = "$SCHEMA"
          role = "$SNOWFLAKE_ROLE"
          EOF
          chmod 0600 ~/.snowflake/config.toml

      - name: Create Snowflake stage and upload files
        env:
          SNOWFLAKE_ACCOUNT: ${{ github.event.inputs.snowflake_account }}
          SNOWFLAKE_USER: ${{ github.event.inputs.snowflake_user }}
          SNOWFLAKE_PASSWORD: ${{ github.event.inputs.snowflake_password }}
          SNOWFLAKE_ROLE: ${{ github.event.inputs.snowflake_role }}
        run: |
          snowflake -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -r $SNOWFLAKE_ROLE -d $DATABASE -s $SCHEMA -p $SNOWFLAKE_PASSWORD --connection-name default connection test
          snowflake -c default sql -q "CREATE STAGE IF NOT EXISTS my_app_stage;"
          snowflake -c default upload -s my_app_stage -p . --overwrite

      - name: Create app directory and copy all necessary files
        run: |
          mkdir -p ~/app
          cp -r . ~/app

      - name: Deploy the streamlit app
        shell: bash
        run: |
          cd ~/app
          snow streamlit deploy --debug --replace >> $GITHUB_STEP_SUMMARY
